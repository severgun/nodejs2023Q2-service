// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  login        String   @unique @db.VarChar(30)
  password     String
  refreshToken String?
  version      Int      @default(1)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("users")
}

model Artist {
  id     String  @id @default(uuid())
  name   String
  grammy Boolean @default(false)
  albums Album[]
  tracks Track[]

  @@map("artists")
}

model Album {
  id       String  @id @default(uuid())
  name     String
  year     Int
  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  artistId String?
  tracks   Track[]

  @@map("albums")
}

model Track {
  id       String  @id @default(uuid())
  name     String
  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  artistId String?
  album    Album?  @relation(fields: [albumId], references: [id], onDelete: SetNull)
  albumId  String?
  duration Int

  @@map("tracks")
}

model Favorites {
  id      String   @id @default(uuid())
  artists String[]
  albums  String[]
  tracks  String[]

  @@map("favorites")
}
